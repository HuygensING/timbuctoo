#This config allows you to run a local debug version of timbuctoo
#it also explains the options that you need to configure a production-worthy version

securityConfiguration:
  "@class": nl.knaw.huygens.timbuctoo.server.security.OldStyleSecurityFactoryConfiguration
  localAuthentication:
    "@class": nl.knaw.huygens.timbuctoo.security.dataaccess.localfile.LocalfileAccessFactory
    authorizationsPath: ${timbuctoo_authPath}/authorizations
    loginsFilePath: ${timbuctoo_authPath}/logins.json
    usersFilePath: ${timbuctoo_authPath}/users.json
  autoLogoutTimeout:
    duration: 8
    timeUnit: HOURS
  federatedAuthentication:
    enabled: true
    authenticationServerUrl: DUMMY
    authenticationCredentials: DUMMY

baseUri: ${base_uri} #specifying 0 as port will replace it with the port that timbuctoo ends up listening on
userRedirectUrl: ./static/graphiql

collectionFilters:
  elasticsearch:
    "@class": nl.knaw.huygens.timbuctoo.v5.elasticsearch.ElasticSearchFilter
    hostname: ${timbuctoo_elasticsearch_host}
    port: ${timbuctoo_elasticsearch_port}
    username: ${timbuctoo_elasticsearch_user}
    password: ${timbuctoo_elasticsearch_password}

archetypesSchema: |
  type Archetypes {
    persons: PersonArchetypeList @fromCollection(uri: "http://timbuctoo.huygens.knaw.nl/datasets/clusius/Persons", listAll: true, indexName: "PersonArchetype")
  }

  type PersonArchetypeList {
    prevCursor: ID
    nextCursor: ID
    items: [PersonArchetype!]!
  }

  type PersonArchetype {
    names: Value @rdf(predicate: "http://timbuctoo.huygens.knaw.nl/properties/names", direction: "OUT", isValue: true, isObject: false, isList: false)
  }

databases:
  databaseLocation: ${timbuctoo_dataPath}/datasets

databaseConfiguration:
  databasePath: ${timbuctoo_dataPath}/neo4j

dataSet:
  dataSetMetadataLocation: ${timbuctoo_dataPath}/datasets
  fileStorage:
    "@class": nl.knaw.huygens.timbuctoo.v5.filestorage.implementations.filesystem.FileSystemFileStorageFactory
    rootDir: ${timbuctoo_dataPath}/datasets
  rdfIo:
    "@class": nl.knaw.huygens.timbuctoo.v5.rdfio.implementations.rdf4j.Rdf4jIoFactory
    rdfFormat: application/n-quads

# The base uri will be the base uri for all the generated RDF by Timbuctoo.
rdfUriHelper:
  rdfBaseUri: http://example.org/

# Timeouts
# the 'duration' is a number
# the timeUnit is a 'java.util.concurrent.TimeUnit'
searchResultAvailabilityTimeout:
  duration: 8
  timeUnit: HOURS

webhooks:
  vreAdded: ${timbuctoo_search_url}
  dataSetUpdated: ${timbuctoo_indexer_url}
  httpClient:
    connectionRequestTimeout: 200ms

activeMq:
  #persistent=false means that the broker does not try to store the queue. This is not needed in a debugrun.
  #useShutdownHook=false is needed because the activeMq bundle already takes care of shutting down activeMq
  #using a vm:// url will also add two amq metrics to the dropwizard metrics. Using a remote url means you have
  #to export the metrics from the remote VM's jmx yourself. See http://activemq.apache.org/jmx.html for more info
  brokerUrl: vm://timbuctoo?broker.persistent=false&broker.useShutdownHook=false
  shutdownWaitInSeconds: 1 #use for debug runs only!

persistenceManager:
  useDummy: yes #set to "no" to connect to a real handle server
#  privateKeyFile:
#  cypher:
#  namingAuthority:
#  prefix:

#Note! disable this for production builds
allowGremlinEndpoint: true

server:
  applicationConnectors:
    - type: http #Note! if you change this you might or might not also want to change the baseUri
      port: ${timbuctoo_port} #Note! if you change this you might or might not also want to change the baseUri
  adminConnectors:
    - type: http
      port: ${timbuctoo_adminPort}
  requestLog:
    appenders: [] #All requests are already logged using logging.LoggingFilter so the seperate requestlog is not needed

logging:
  appenders:
    - type: console
      logFormat: "- %-5p  %m [%c{60}]%n"
#enable this to send the logs to an external log server
#    - type: gelf
#      host: 192.168.99.100
#      port: 32768
#      useMarker: true #
#      includeFullMDC: true #We put the request information in the MDC
  level: INFO

#enable this to send the metrics to graphite
#metrics:
#  reporters:
#     - type: graphite
#       host: 192.168.99.100
#       port: 32778
#       prefix: timbuctoo
